name: Build SUSE kernel
on:
  workflow_call:
    inputs:
      _cpusched:
        required: true
        type: string
      compiler:
        required: true
        type: string

env:
  _distro: "Suse"
  _IS_GHCI: "true"

jobs:
  build-kernel:
    env:
      _cpusched: ${{ inputs._cpusched }}
      compiler: ${{ inputs.compiler }}

    runs-on: ubuntu-latest
    container: ghcr.io/the-kernel-toolkit/tkt-suse-dev:latest

    steps:
      - name: Checkout TKT
        uses: actions/checkout@v4

      - name: Adjust compiler and compile Kernel
        env:
          _cpusched: ${{ inputs._cpusched }}
          compiler: ${{ inputs.compiler }}
        run: |
          sed -i 's/^_compiler=".*"/_compiler="${{ inputs.compiler }}"/' /GHCI.cfg
          sed -i 's/^_cpusched=".*"/_cpusched="${{ inputs._cpusched }}"/' /GHCI.cfg
          git config --global --add safe.directory "$(pwd)"
          if [ "${{ inputs.compiler }}" = "llvm" ] || [ "${{ inputs.compiler }}" = "clang" ]; then
            export KCFLAGS="$KCFLAGS -Wno-error -Wno-unused-command-line-argument"
          fi
          set +o pipefail
          yes '' | ./install.sh install || true
          set -o pipefail

      - name: Package RPM files
        run: |
          tar czf SUSE-linux-diet-${{ env._cpusched }}-${{ inputs.compiler }}.tar.gz */*.rpm

      - uses: actions/upload-artifact@v4
        with:
          name: suse-kernel-packages-${{ env._cpusched }}-${{ inputs.compiler }}
          path: SUSE-linux-*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          tag_name: ${{ github.ref_name }}
          name: "SUSE Kernel Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: RPMS/SUSE-linux-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
